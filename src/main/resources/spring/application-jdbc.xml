<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="com.peramdy.dao.*"/>

    <!-- write dataSource -->
    <bean id="dataSourceWrite" class="org.apache.commons.dbcp2.BasicDataSource" scope="singleton">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url.write}"/>
        <property name="username" value="${jdbc.userName.write}"/>
        <property name="password" value="${jdbc.password.write}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxWaitMillis" value="${jdbc.maxWaitMillis}"/>
    </bean>

    <!-- read dataSource -->
    <bean id="dataSourceRead" class="org.apache.commons.dbcp2.BasicDataSource" scope="singleton">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url.read}"/>
        <property name="username" value="${jdbc.userName.read}"/>
        <property name="password" value="${jdbc.password.read}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxWaitMillis" value="${jdbc.maxWaitMillis}"/>
    </bean>

    <!-- Jpa Entity Manager(read) 配置 -->
    <bean id="entityManagerFactoryRead" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceRead"/>
        <property name="packagesToScan" value="com.peramdy.entity.read"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapterRead"/>
        <!--<property name="persistenceXmlLocation" value="classpath*:application-jdbc.xml"/>-->
        <property name="jpaProperties">
            <props>
                <!-- 建表的命名规则 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>

                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop><!--validate/update/create-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>
    </bean>

    <!-- Jpa Entity Manager(write) 配置 -->
    <bean id="entityManagerFactoryWrite" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceWrite"/>
        <property name="packagesToScan" value="com.peramdy.entity.write"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapterWrite"/>
        <!--<property name="persistenceXmlLocation" value="classpath*:application-jdbc.xml"/>-->
        <property name="jpaProperties">
            <props>
                <!-- 建表的命名规则 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>

                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop><!--validate/update/create-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>
    </bean>

    <!-- txManager(read) -->
    <bean id="transactionManagerRead" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryRead"/>
        <!--<property name="dataSource" ref="dataSourceRead"/>-->
    </bean>

    <!-- txManager(write) -->
    <bean id="transactionManagerWrite" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryWrite"/>
       <!-- <property name="dataSource" ref="dataSourceWrite"/>-->
    </bean>

    <!-- read -->
    <jpa:repositories base-package="com.peramdy.repository.read"
                      entity-manager-factory-ref="entityManagerFactoryRead"
                      transaction-manager-ref="transactionManagerRead">
    </jpa:repositories>

    <!-- write -->
    <jpa:repositories base-package="com.peramdy.repository.write"
                      entity-manager-factory-ref="entityManagerFactoryWrite"
                      transaction-manager-ref="transactionManagerWrite">
    </jpa:repositories>


    <tx:annotation-driven transaction-manager="transactionManagerWrite"/>

    <!-- hibernateJpaVendorAdapterRead(read) -->
    <bean id="hibernateJpaVendorAdapterRead" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
    </bean>

    <!-- hibernateJpaVendorAdapterRead(write) -->
    <bean id="hibernateJpaVendorAdapterWrite" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
    </bean>


</beans>